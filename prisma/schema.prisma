generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model admins {
  id        String    @id
  username  String    @unique
  password  String
  email     String?
  name      String?
  isActive  Boolean   @default(true)
  role      String    @default("admin")
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime
}

model categories {
  id          String     @id
  name        String     @unique
  description String?
  image       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  offers      offers[]
  products    products[]
}

model hero_slides {
  id          String   @id
  title       String
  subtitle    String
  description String
  image       String?
  ctaText     String   @default("اشتري الآن")
  ctaLink     String   @default("/")
  bgColor     String   @default("from-pink-400 to-purple-500")
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model homepage_products {
  id        String   @id
  productId String
  section   String
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
  products  products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model homepage_settings {
  id                    String   @id @default("1")
  featuredProductsCount Int      @default(8)
  bestSellersCount      Int      @default(8)
  newProductsCount      Int      @default(8)
  showOffers            Boolean  @default(true)
  showBestSellers       Boolean  @default(true)
  showNewProducts       Boolean  @default(true)
  showQuickCategories   Boolean  @default(true)
  showFeatures          Boolean  @default(true)
  updatedAt             DateTime
}

model offers {
  id                 String      @id
  title              String
  description        String
  discountPercentage Int
  originalPrice      Float       @default(0)
  discountedPrice    Float       @default(0)
  categoryId         String?
  image              String?
  isActive           Boolean     @default(true)
  order              Int         @default(0)
  expiresAt          DateTime?
  createdAt          DateTime    @default(now())
  updatedAt          DateTime
  categories         categories? @relation(fields: [categoryId], references: [id])
}

model order_items {
  id        String   @id
  orderId   String
  productId String
  quantity  Int
  price     Float
  orders    orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  products  products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model orders {
  id              String        @id
  userId          String
  status          String        @default("PENDING")
  totalAmount     Float
  shippingAddress String
  phone           String
  notes           String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime
  order_items     order_items[]
  users           users         @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model products {
  id                String              @id
  name              String
  description       String
  price             Float
  originalPrice     Float?
  image             String
  images            String
  categoryId        String
  stock             Int                 @default(0)
  rating            Float               @default(0)
  reviewCount       Int                 @default(0)
  isNew             Boolean             @default(false)
  isBestSeller      Boolean             @default(false)
  isActive          Boolean             @default(true)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  benefits          String?
  brand             String?
  ingredients       String?
  sku               String?
  usage             String?
  weight            String?
  homepage_products homepage_products[]
  order_items       order_items[]
  categories        categories          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model users {
  id        String   @id
  email     String   @unique
  name      String
  phone     String?
  address   String?
  role      String   @default("CUSTOMER")
  createdAt DateTime @default(now())
  updatedAt DateTime
  orders    orders[]
}
