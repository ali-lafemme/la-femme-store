generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  address   String?
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("users")
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
  offers      Offer[]

  @@map("categories")
}

model Product {
  id            String      @id @default(cuid())
  name          String
  description   String
  price         Float
  originalPrice Float?
  image         String
  images        String      // JSON array of image URLs
  categoryId    String
  stock         Int         @default(0)
  rating        Float       @default(0)
  reviewCount   Int         @default(0)
  isNew         Boolean     @default(false)
  isBestSeller  Boolean     @default(false)
  isActive      Boolean     @default(true)
  // Additional product details
  ingredients   String?     // Product ingredients
  usage         String?     // How to use the product
  benefits      String?     // Product benefits
  weight        String?     // Product weight/size
  brand         String?     // Product brand
  sku           String?     // Stock keeping unit
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orderItems    OrderItem[]
  category      Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  homepageProducts HomepageProducts[]

  @@map("products")
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  status          OrderStatus @default(PENDING)
  totalAmount     Float
  shippingAddress String
  phone           String
  notes           String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  items           OrderItem[]
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model HeroSlide {
  id          String   @id @default(cuid())
  title       String
  subtitle    String
  description String
  image       String?
  ctaText     String   @default("اشتري الآن")
  ctaLink     String   @default("/")
  bgColor     String   @default("from-pink-400 to-purple-500")
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("hero_slides")
}

model Offer {
  id                 String    @id @default(cuid())
  title              String
  description        String
  discountPercentage Int
  originalPrice      Float     @default(0)
  discountedPrice    Float     @default(0)
  categoryId         String?
  image              String?
  isActive           Boolean   @default(true)
  order              Int       @default(0)
  expiresAt          DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  category           Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("offers")
}

model HomepageSettings {
  id                    String @id @default("1")
  featuredProductsCount Int    @default(8)
  bestSellersCount      Int    @default(8)
  newProductsCount      Int    @default(8)
  showOffers            Boolean @default(true)
  showBestSellers       Boolean @default(true)
  showNewProducts       Boolean @default(true)
  showQuickCategories   Boolean @default(true)
  showFeatures          Boolean @default(true)
  updatedAt             DateTime @updatedAt
  @@map("homepage_settings")
}

model HomepageProducts {
  id          String   @id @default(cuid())
  productId   String
  section     String   // "best-sellers" or "new-products"
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  @@map("homepage_products")
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  email     String?
  name      String?
  isActive  Boolean  @default(true)
  role      String   @default("admin")
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("admins")
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
